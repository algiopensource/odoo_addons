<?xml version="1.0" encoding="UTF-8"?>
<templates id="template" xml:space="preserve">

    <t t-name="download_docker_image_wizard">
      <div>
        <p>
          To run a build in local:
        </p>
        <ol>
          <li>
            Install Docker Compose (cf. <a href="https://docs.docker.com/compose/install" target="new">official documentation)</a>
          </li>
          <t t-if="widget.docker_registry_insecure">
            <li>
              Configure your docker daemon in the /etc/default/docker file on your system by adding/completing the following line:
              <pre>DOCKER_OPTS="--insecure-registry <t t-esc="widget.docker_registry_url"/> --icc=false"</pre>
            </li>
          </t>
          <t t-if="widget.docker_registry_auth_passwd">
            <li>
              Login to docker registry (<t t-esc="widget.docker_registry_auth_login"/>/<t t-esc="widget.docker_registry_auth_passwd"/>):
              <pre>docker login <t t-esc="widget.docker_registry_url"/></pre>
            </li>
          </t>
          <li>
            <input class="docker" value="docker-compose.yml" readonly="True"/>
            <button id="button_download" class="btn docker-btn" title="Download">
              <i class="fa fa-download"/>
            </button>
          </li>
          <li>
            <input id="docker_cmd" class="docker" value="docker-compose up" readonly="True"/>
            <button id="button_copy" class="btn docker-btn" title="Copy to clipboard"
                data-copy-target="#docker_cmd">
              <i class="fa fa-copy"/>
            </button>
          </li>
        </ol>
      </div>
      <hr/>
      <div>
        <p>To download another tag, replace <b>latest</b> by one of the following tags <b><t t-esc="widget.docker_tags"/></b> in docker-compose.yml:</p>
        <pre>services:
  odoo:
    image: <t t-esc="widget.docker_registry_image"/>:<b><t t-esc="widget.default_tag"/></b>
  db:
    image: <t t-esc="widget.docker_registry_image"/>_db:<b><t t-esc="widget.default_tag"/></b></pre>

        <p>To expose port 8069 (the default Odoo port) on port 8080, modify the followings lines in docker-compose.yml:</p>
        <pre>services:
  odoo:
    ports:
      - <b><i>8080</i></b>:8069</pre>

        <p>To use local source code instead of container source code, add the followings lines in docker-compose.yml:</p>
        <pre>services:
  odoo:
      <b>volumes:
        - <i>your_local_source_code</i>:<t t-esc="widget.odoo_dir"/></b></pre>

        <p>To use local database instead of container db, modify the followings lines in docker-compose.yml:</p>
        <pre>services:
  odoo:
      <b>volumes:
        - /var/run/postgresql/.s.PGSQL.5432:/var/run/postgresql/.s.PGSQL.5432
      command: ['--load=web,smile_test,smile_upgrade', '--db_host=/var/run/postgresql']</b>
  <s>db:</s>...</pre>

        <p>Not to be disconnected after each restart, add the following lines in docker-compose.yml:</p>
        <pre>services:
  odoo:
      <b>volumes:
        - sessions:/home/odoo/.local/share/Odoo/sessions
volumes:
  sessions:
    driver: local</b></pre>

        <p>To use breakpoints with pdb, execute the following command lines:</p>
        <pre>docker-compose up -d &amp;&amp; docker attach odoo</pre>

        <p>To run in a interactive mode, execute the following command lines:</p>
        <pre>docker-compose up -d &amp;&amp; docker exec -ti odoo bash</pre>
      </div>
    </t>

</templates>
