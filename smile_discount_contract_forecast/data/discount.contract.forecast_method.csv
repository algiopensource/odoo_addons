id,name,formula
forecast_method_prorata_temporis,Prorata temporis,self.base_value * ((fields.Date.from_string(self.contract_id.date_stop) - fields.Date.from_string(self.contract_id.date_start)).days + 1) / ((fields.Date.from_string(fields.Date.today()) - fields.Date.from_string(self.contract_id.date_start)).days + 1)
forecast_method_previous_period_values,Complete with previous period values,self.base_value + self.with_context(force_date_stop=fields.Date.to_string(fields.Date.from_string(fields.Date.today()) - relativedelta(months=self.contract_id.contract_tmpl_id.months))).compute_base_value(in_previous_period=True)
forecast_method_prorata_valoris,Following the previous period progress to date,(self.with_context(force_date_stop=fields.Date.to_string(fields.Date.from_string(fields.Date.today()) - relativedelta(months=self.contract_id.contract_tmpl_id.months))).compute_base_value(in_previous_period=True) or self.compute_base_value(in_previous_period=True)) and self.base_value * self.compute_base_value(in_previous_period=True) / (self.with_context(force_date_stop=fields.Date.to_string(fields.Date.from_string(fields.Date.today()) - relativedelta(months=self.contract_id.contract_tmpl_id.months))).compute_base_value(in_previous_period=True) or self.compute_base_value(in_previous_period=True)) or 0.0
